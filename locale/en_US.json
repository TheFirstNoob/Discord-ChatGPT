{
	"about_description": "Information about the bot",
	"about_error": "> :x: **ERROR:** about.txt file not found! Please contact {admin} and report this error.**",
	"about_error_log": "about: Information file not found: {path}",
	"about_log": "User {username} used the about command!",
	"ask_description": "Ask a question to ChatGPT",
	"asklong_description": "Ask a long question to ChatGPT via text and file",
	"asklong_file_describe": "Upload a text file with your query/code etc.",
	"asklong_file_error": "> :x: **ERROR:** Only text formats are supported! Uploaded file: {filename}",
	"asklong_read_error": "> :x: **ERROR:** Failed to read file. Only text formats are supported! {error}",
	"asklong_read_error_log": "asklong: Failed to read file: {error}",
	"askpdf_description": "Extract text from PDF file and ask AI",
	"askpdf_error": "> :x: **ERROR:** {error}",
	"askpdf_error_log": "askpdf: Error processing PDF file: {error}",
	"askpdf_file_describe": "Upload a PDF file for text extraction",
	"askpdf_file_error": "> :x: **ERROR:** Only PDF files are supported! Uploaded file: {filename}",
	"askpdf_log": "User {username} : /askpdf [Text: {message}, PDF: {filename}] in ({channel})",
	"askpdf_message_describe": "Enter your request",
	"ban_check_error": "> :x: **ERROR:** Failed to check your ban status. Please try again later.",
	"ban_days_describe": "Number of days to ban (optional, default - permanent ban)",
	"ban_default_reason": "Violation of bot usage rules",
	"ban_description": "Ban a user",
	"ban_embed_description_other": "User {user_id} has been banned for rule violation.",
	"ban_embed_description_self": "You have been banned for rule violation.",
	"ban_embed_field_ban_date": "Ban date",
	"ban_embed_field_ban_duration": "Ban duration",
	"ban_embed_field_reason": "Reason",
	"ban_embed_permanent": "Ban is permanent!",
	"ban_embed_title_other": "⛔ User {user_id} has been banned!",
	"ban_embed_title_self": "⛔ You have been blocked from using the bot!",
	"ban_embed_unban_date": "Unban date: {date}",
	"ban_error": "> :x: **An error occurred while banning:**\n```\n{error}\n```",
	"ban_info_description": "Check ban status and show ban information",
	"ban_info_error": "> :x: **An error occurred while getting ban information:**\n```\n{error}\n```",
	"ban_info_error_log": "ban_info: Error getting ban information for user {user_id}: {error}",
	"ban_info_not_banned_other": "> :white_check_mark: **User {user_id} is not banned and can use the bot.**",
	"ban_info_not_banned_self": "> :white_check_mark: **You are not banned and can use the bot.**",
	"ban_info_user_describe": "User ID (optional, default - You)",
	"ban_list_description": "List of banned users",
	"ban_list_empty": "> :white_check_mark: **No banned users.**",
	"ban_list_item": "**ID:** {user_id}, **Reason:** {reason}",
	"ban_list_log": "Administrator {admin_id} requested the list of banned users",
	"ban_list_success": "### Banned Users:\n{list}",
	"ban_log_attempt": "ban_user: Attempt to ban user {user_id} by administrator {admin_id}. Reason: {reason}",
	"ban_log_success": "ban_user: Ban command for user {user_id} executed successfully.",
	"ban_manager_complete": "BanManager: Checking expired bans completed.",
	"ban_manager_error": "BanManager: Error checking expired bans: {error}",
	"ban_manager_start": "BanManager: Starting expired bans check...",
	"ban_reason_describe": "Ban reason (optional)",
	"ban_success": "> :white_check_mark: **User {user_id} has been successfully banned**",
	"ban_user_describe": "ID of the user to ban",
	"ban_user_error": "ban_user: Error writing ban file for user {user_id}: {error}",
	"ban_user_success": "ban_user: User {user_id} banned. Reason: {reason}",
	"bot_start_log": "{user} successfully started!",
	"changelog_back_button": "⬅️ Back to versions",
	"changelog_description": "Bot changelog",
	"changelog_description_select": "Select version to view changes",
	"changelog_full_description": "View the complete changelog of the bot",
	"changelog_log": "User {username} requested changelog for bot version {version}",
	"changelog_title": "Changelog",
	"changelog_version_title": "Changes in version {version}",
	"changelog_versions_list": "Available versions",
	"chat_model_change_button": "🔄 Change to another model",
	"chat_model_choose_model": "Choose a model",
	"chat_model_description": "Change chat model",
	"chat_model_full_description": "Change the AI model for chat",
	"chat_model_log": "Model changed to {model} for user {user}",
	"chat_model_success": "> :white_check_mark: **SUCCESS:** Chat model changed to: **{model}**",
	"chat_model_title": "AI Model Selection",
	"cleanup_expired_bans_error": "cleanup_expired_bans: Error cleaning up expired bans for user {user_id}: {error}",
	"directory_create_error": "create_directory: Error creating directory {directory}: {error}",
	"draw_count_describe": "Number of images to generate (optional, default - 1)",
	"draw_description": "Generate an image from AI model",
	"draw_error": "> :x: **ERROR:** {error}",
	"draw_error_log": "generate_and_send_image: Error during execution: {error}",
	"draw_generate_empty": "> :x: **ERROR:** Failed to generate any images.",
	"draw_generate_empty_log": "generate_and_send_image: Failed to generate any images.",
	"draw_generate_error_log": "generate_and_send_image: Failed to generate image. Response contains no data.",
	"draw_image_model_message": ":paintbrush: **Image from model**: {model}",
	"draw_images_model_message": ":paintbrush: **Images from model**: {model}",
	"draw_model_describe": "Choose a model for image generation",
	"draw_prompt_describe": "Enter your request (In English)",
	"encryption_decrypt_error": "decrypt: Decryption error: {error}",
	"encryption_encrypt_error": "encrypt: Encryption error: {error}",
	"encryption_invalid_json": "encryption: Invalid JSON format",
	"encryption_invalid_key_file": "encryption: Invalid key file format",
	"encryption_invalid_token": "encryption: Invalid encryption token",
	"encryption_key_error": "_load_or_generate_key: Key operation error: {error}",
	"encryption_no_user_id": "encryption: No user ID specified",
	"encryption_rotate_error": "encryption: Error rotating key: {error}",
	"error_all_providers_failed": "All providers failed to respond for this model",
	"error_critical": "CRITICAL ERROR",
	"error_critical_request_processing": "CRITICAL ERROR IN REQUEST PROCESSING",
	"error_decryption_failed": "Failed to decrypt data",
	"error_details": "Error details",
	"error_empty_ai_response": "Received empty response from AI",
	"error_empty_file": "File is empty",
	"error_last_error": "Last error",
	"error_no_content": "Results found but failed to extract useful content for query '{query}'",
	"error_no_images": "Failed to find suitable images for query '{query}'",
	"error_no_results": "Failed to find results for query '{query}'",
	"error_no_videos": "Failed to find suitable videos for query '{query}'",
	"error_processing_results": "Error processing results: {error}",
	"error_request_processing": "ERROR IN REQUEST PROCESSING",
	"error_request_processing_failed": "Failed to process your request. Please try again or contact administrator",
	"error_search_failed": "SEARCH ERROR",
	"error_try_again_or_contact_admin": "Please try again or contact administrator",
	"error_try_different_model": "Please try a different model",
	"error_try_later_or_change_query": "Please try again later or change your query",
	"error_unsupported_message_type": "Unsupported message object type",
	"error_unsupported_request_type": "Unsupported request type: {type}",
	"fetch_html_error": "fetch_html: Error fetching {url}: {error}",
	"fetch_html_skip": "fetch_html: Error {status} when fetching {url}: Skipping site.",
	"fetch_html_too_large": "fetch_html: Content too large to process: {url}",
	"fetch_html_unknown_error": "fetch_html: Unknown error when fetching {url}: {error}",
	"file_append_error": "append_file: Error appending to file {filepath}: {error}",
	"file_delete_error": "delete_file: Error deleting file {filepath}: {error}",
	"file_json_read_error": "read_json: Error reading JSON from file {filepath}: {error}",
	"file_json_write_error": "write_json: Error writing JSON to file {filepath}: {error}",
	"file_read_error": "read_file: Error reading file {filepath}: {error}",
	"file_write_error": "write_file: Error writing to file {filepath}: {error}",
	"get_banned_users_error": "get_banned_users: Error reading ban file for user {user_id}: {error}",
	"get_website_info_error": "get_website_info: Error processing {url}: {error}",
	"get_website_info_max_retries": "get_website_info: Maximum retry count exceeded for {url}.",
	"get_website_info_no_content": "get_website_info: Failed to extract meaningful content: {url}",
	"get_website_info_retry": "get_website_info: aiohttp error processing {url} (attempt {attempt}/{max_attempts}): {error}",
	"get_website_info_skip": "get_website_info: Skipping site {url} due to error: {error}",
	"help_category_ai": "AI Management",
	"help_category_info": "Information",
	"help_category_main": "Main Commands",
	"help_category_reminders": "Reminders",
	"help_command_about": "/about",
	"help_command_about_desc": "Information about the bot",
	"help_command_ask": "/ask",
	"help_command_ask_desc": "Chat with AI (creates separate memory of your requests in DM)",
	"help_command_asklong": "/asklong",
	"help_command_asklong_desc": "Chat with AI with file support",
	"help_command_askpdf": "/askpdf",
	"help_command_askpdf_desc": "Chat with AI with PDF file support",
	"help_command_changelog": "/changelog",
	"help_command_changelog_desc": "Changelog",
	"help_command_chat_model": "/chat-model",
	"help_command_chat_model_desc": "Change AI model",
	"help_command_draw": "/draw",
	"help_command_draw_desc": "Create images using AI",
	"help_command_help": "/help",
	"help_command_help_desc": "This help",
	"help_command_history": "/history",
	"help_command_history_desc": "Chat history",
	"help_command_instruction_reset": "/instruction-reset",
	"help_command_instruction_reset_desc": "Reset AI instruction",
	"help_command_instruction_set": "/instruction-set",
	"help_command_instruction_set_desc": "Set AI instruction",
	"help_command_remind_add": "/remind-add",
	"help_command_remind_add_desc": "Add reminders",
	"help_command_remind_delete": "/remind-delete",
	"help_command_remind_delete_desc": "Delete reminder",
	"help_command_remind_list": "/remind-list",
	"help_command_remind_list_desc": "List reminders",
	"help_command_reset": "/reset",
	"help_command_reset_desc": "Reset AI history and parameters",
	"help_description": "List of available commands and their descriptions",
	"help_footer": "Bot version: {version}",
	"help_title": "Command Help",
	"history_description": "Information about your chat history",
	"history_download_error": "> :x: **ERROR:** Failed to send file. {error}",
	"history_download_success": "> :white_check_mark: **SUCCESS:** Your chat history:",
	"history_empty": "> :x: **ERROR:** Message history is empty!",
	"history_error": "> :x: **ERROR:** Failed to get history. {error}",
	"history_error_log": "history: Critical error: {error}",
	"image_search_instruction": "[SYSTEM INSTRUCTION] USER REQUESTED IMAGES. SIMPLY SEND THEM THE RECEIVED LINKS AND RESPOND WITHIN THEIR REQUEST. Search result: {result}",
	"instruction_reset_description": "Reset AI instruction",
	"instruction_reset_log": "User {user} reset the instruction.",
	"instruction_reset_success": "> :white_check_mark: **SUCCESS:** Instruction reset!",
	"instruction_set_describe": "AI instruction",
	"instruction_set_description": "Set AI instruction",
	"instruction_set_log": "User {user} set the instruction.",
	"instruction_set_success": "> :white_check_mark: **SUCCESS:** Instruction set!",
	"is_user_banned_error": "is_user_banned: Error reading ban file for user {user_id}: {error}",
	"log_ban_check_error": "check_ban_and_respond: Error checking ban for user {user_id}: {error}",
	"log_ban_error": "ban_user: Error executing ban command for user {user_id}: {error}",
	"log_ban_task_init": "Initializing ban check task...",
	"log_bot_mention": "User {username} : Bot mention [{message}] in ({channel})",
	"log_channel_convert_error": "send_start_prompt: Error converting channel ID: {error}",
	"log_channel_error": "send_start_prompt: Could not find channel with ID {channel_id}",
	"log_cookies_dir_error": "har_and_cookies: Directory {dir} is not readable or does not exist.",
	"log_handle_response_critical": "handle_response: Critical error: {error}",
	"log_instruction_not_found": "load_instruction_from_file: Instructions file not found: {filepath}",
	"log_load_data_error": "load_user_data: Error during decryption: {error}",
	"log_load_instruction_error": "load_instruction_from_file: Error reading instructions file: {error}",
	"log_new_data_file": "load_user_data: New data file created {filepath} (user_id: {user_id})",
	"log_new_system_file": "load_user_data: New data file created {filepath}",
	"log_provider_add_error": "_initialize_providers: Error adding API provider {provider}: {error}",
	"log_provider_added": "_initialize_providers: API provider {provider} added to models: {models}",
	"log_provider_failed": "Provider {provider} failed to respond: {error}",
	"log_provider_not_found": "_initialize_providers: Provider {provider} not found in g4f.Provider",
	"log_provider_skip": "{provider}_API_KEY not set. Skipping.",
	"log_provider_test_added": "Test provider {provider} added for models: {models}",
	"log_provider_trying": "Trying provider {provider}",
	"log_provider_warning": "_initialize_providers: Test provider {provider} added. Code may work unstable!",
	"log_providers_complete": "_initialize_providers: Provider initialization completed",
	"log_providers_init": "_initialize_providers: Starting provider initialization...",
	"log_remind_error": "remind: Error setting reminder: {error}",
	"log_reminder_load_start": "Starting to load reminders from files...",
	"log_reminder_task_init": "Initializing reminder task...",
	"log_request_error": "Error processing search results: {error}",
	"log_scheduler_prepare": "Preparing to initialize background tasks...",
	"log_search_error": "_append_search_results: Error during search: {error}",
	"log_send_critical_error": "send_message: Critical error when trying to send error messages: {error}",
	"log_send_error": "send_message: Full error during sending: {error}",
	"log_start_prompt_critical": "send_start_prompt: Critical error when sending prompt: {error}",
	"log_start_prompt_empty": "send_start_prompt: Error when sending prompt: Received empty response from AI",
	"log_start_prompt_success": "send_start_prompt: Response from AI received. Function worked correctly!",
	"log_system_instructions": "Sending system instructions for AI with size (bytes): {size}",
	"log_system_instructions_empty": "System instructions are empty. Check system_prompt.txt file",
	"log_tasks_init_complete": "Background tasks initialization completed",
	"log_unban_error": "unban_user: Error executing unban command for user {user_id}: {error}",
	"log_user_ask": "User {username} : /ask [{message}] ({request_type}) in ({channel})",
	"log_user_ask_error": "Error processing user request {username}: {error}",
	"log_user_asklong": "User {username} : /asklong [Text: {message}, File: {filename}] ({request_type}) in ({channel})",
	"log_user_draw": "User {username} : /draw [{prompt}] in ({channel}) via [{model}] Count: [{count}]",
	"log_user_help": "User {username} used the help command!",
	"log_user_history_channel": "User {username} requested message history in channel {channel}",
	"log_user_history_dm": "User {username} requested message history in DM",
	"log_user_remind": "User {username} set a reminder for themselves",
	"main_environment_marker_error": "[WARNING] Failed to evaluate environment marker '{marker}': {error}. Package '{package}' will be skipped.",
	"main_library_check_error": "[ERROR] An error occurred while checking library '{library}' version: {error}",
	"main_library_not_found": "[ERROR] Library '{library}' is not installed.",
	"main_library_not_found_help": "Please install all dependencies using: pip install -r {file}",
	"main_library_not_found_help_alt": "Or install only this library using: pip install '{library}'",
	"main_library_version_info": "[INFO] Library '{library}' is installed (version {version}), but version is not specified in {file}.",
	"main_library_version_warning": "[WARNING] Library '{library}' is outdated. Required version >= {required}, you have {installed}.",
	"main_library_version_warning_help": "Please update the library using: pip install --upgrade '{library}'",
	"main_library_version_warning_newer": "[WARNING] Library '{library}' is newer than required. Required version <= {required}, you have {installed}.",
	"main_library_version_warning_unstable": "Project may work unstable.",
	"main_python_version_error": "[ERROR] This project requires Python version >= 3.10. You have version {version} installed.",
	"main_python_version_error_help": "Please update Python to the required version.",
	"main_requirements_not_found": "[ERROR] File {file} not found.",
	"main_requirements_read_error": "[ERROR] An error occurred while reading file {file}: {error}",
	"message_ai_thinking": ":brain: AI is thinking...",
	"message_describe": "Enter your request",
	"message_send_error": "send_split_message: Unsupported message object type for sending",
	"model_response": "> :robot: **You are being answered by model:** *{model}* \n> :wrench: **{bot_name} version:** *{version}*",
	"no_permission": "> :x: **You do not have permission for this command!**",
	"prepare_search_results_error": "prepare_search_results: Error getting information from site {url}: {error}",
	"remind_add_day_describe": "Day (1-31)",
	"remind_add_description": "Create a reminder",
	"remind_add_hour_describe": "Hours (0-23)",
	"remind_add_message_describe": "Reminder message",
	"remind_add_minute_describe": "Minutes (0-59)",
	"remind_add_month_describe": "Month (1-12)",
	"remind_add_offset_describe": "Hour offset from MSK time (e.g., +3 or -7)",
	"remind_add_year_describe": "Year (e.g., 2023)",
	"remind_delete_description": "Delete a reminder",
	"remind_delete_empty": "> :warning: **You have no active reminders.**",
	"remind_delete_error": "> :x: **ERROR:** Failed to delete reminder.",
	"remind_delete_invalid": "> :x: **ERROR:** Invalid reminder number.",
	"remind_delete_log": "{username} deleted reminder number {number}",
	"remind_delete_number_describe": "Reminder number to delete",
	"remind_delete_success": "> :white_check_mark: **Reminder {number} deleted!**",
	"remind_error": "> :x: **ERROR:** {error}",
	"remind_error_log": "remind: Error setting reminder: {error}",
	"remind_future_error": "> :x: **ERROR:** You cannot set a reminder for more than a year.",
	"remind_list_description": "Show all your reminders",
	"remind_list_empty": "> :warning: **You have no active reminders.**",
	"remind_list_log": "{username} requested their reminder list",
	"remind_list_success": "> :page_with_curl: **Reminder List:**\n{list}",
	"remind_past_error": "> :x: **ERROR:** You cannot set a reminder for a time in the past.",
	"remind_scheduler_error": "Reminder scheduler error: {error}",
	"remind_scheduler_error_log": "Reminder scheduler error: {error}",
	"remind_set_success": "> :white_check_mark: **Reminder set for {time}!**",
	"remind_time_error": "> :x: **ERROR:** Invalid time format. Please make sure all values are correct.",
	"reminder_load_dir_error": "Error loading reminders directory: {error}",
	"reminder_load_error": "Error loading reminders for user {user_id}: {error}",
	"reminder_load_success": "Reminders successfully loaded",
	"reminder_message": "Reminder: {message}",
	"reminder_message_overdue": "Overdue reminder: {message}",
	"reminder_retry_error": "reminder_retry: Error retrying reminder {reminder_id} for user {user_id}",
	"reminder_retry_success": "Successfully retried sending reminder",
	"reminder_save_error": "Error saving reminder: {error}",
	"reminder_scheduler_error": "reminder_scheduler: Error initializing scheduler: {error}",
	"reminder_scheduler_not_init": "Reminder scheduler not initialized",
	"reminder_scheduler_ready": "Reminder scheduler initialized successfully",
	"reminder_send_error": "Error sending reminder: {error}",
	"reminder_send_success": "Reminder sent successfully",
	"request_type_describe": "Request type through the internet (Search, Image, Video)",
	"request_type_images_name": "Image",
	"request_type_search_name": "Search",
	"request_type_videos_name": "Video",
	"reset_description": "Reset all parameters and chat history",
	"reset_log": "User {user} reset AI history and parameters.",
	"reset_success": "> :white_check_mark: **SUCCESS:** Your AI history and parameters have been reset!",
	"search_images_info": "Searching images: {query}",
	"search_no_results": "Failed to find results for your query.",
	"search_videos_info": "Searching videos: {query}",
	"search_web_error": "Error during search: {error}",
	"search_web_info": "Searching the web: {query}",
	"select_model_placeholder": "Select a model",
	"select_provider_placeholder": "Select a provider",
	"test_save_result": "[+] Result saved to file: {filename}",
	"test_send_request": "[?] Sending request to model: {model} Provider: {provider}",
	"test_success_response": "[+] Successful response from model: {model} Provider: {provider} in {time:.2f} sec: {response}",
	"unban_description": "Unban a user",
	"unban_error": "> :x: **An error occurred while unbanning:**\n```\n{error}\n```",
	"unban_log_attempt": "unban_user: Attempt to unban user {user_id} by administrator {admin_id}",
	"unban_not_banned": "> :warning: **User {user_id} was not banned**",
	"unban_success": "> :white_check_mark: **User {user_id} has been successfully unbanned**",
	"unban_user_describe": "ID of the user to unban",
	"unban_user_error": "unban_user: Error deleting ban file for user {user_id}: {error}",
	"unban_user_success": "unban_user: User {user_id} unbanned.",
	"video_search_instruction": "[SYSTEM INSTRUCTION] USER REQUESTED VIDEOS. SIMPLY SEND THEM THE RECEIVED LINKS AND RESPOND WITHIN THEIR REQUEST. Search result: {result}",
	"web_search_instruction": "[SYSTEM INSTRUCTION] USER REQUESTED WEB SEARCH. SIMPLY SEND THEM THE RECEIVED RESULTS AND RESPOND WITHIN THEIR REQUEST. Search result: {result}",
	"website_error": "Error processing website: {error}",
	"website_max_retries": "Maximum number of attempts to get information from the website exceeded.",
	"website_no_content": "Failed to extract meaningful content from the website.",
	"website_no_title": "No title",
	"website_no_url": "URL not specified",
	"website_unknown_error": "Unknown error processing website: {error}"
}
